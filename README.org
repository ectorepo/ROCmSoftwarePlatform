#+title:     Ectorepo: AMD ROCm
#+author:    David Conner
#+email:     noreply@te.xel.io

A list of AMD ROCm repositories. To learn how to use this Repo repo, see the
the [[https://github.com/ectorepo/ectorepo][ectorepo/ectorepo]] Repo ... repo.

#+begin_src xml :tangle default.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest>
  <include name="_remotes.xml"/>
  <default remote="github" sync-j="8" revision="refs/heads/master"/>
  <include name="rocm_software_platform.xml"/>
</manifest>
#+end_src

Check rates:

#+begin_src emacs-lisp :results value code :exports code
(ghub-graphql-rate-limit)
#+end_src

To avoid confirmations

#+begin_src emacs-lisp
(setq-local org-confirm-babel-evaluate nil)
#+end_src

* rocm

Get the core repositories. These should go into =/data/ecto/ROCmSoftwarePlatform/rocm=.

#+name: nrepos
#+begin_src emacs-lisp
100
#+end_src

#+RESULTS: nrepos
: 100

For some reason =:var nrepos=200= doesn't properly substitute here, so =:noweb
yes= is required. However, 100 is the max on sorted results anyways.

#+name: rocm-repos
#+begin_src emacs-lisp :var nrepos=200 :results replace vector value :exports code :noweb yes
(ghub-graphql
 (graphql-query ((organization
                  :arguments ((login . "ROCmSoftwarePlatform"))
                  (repositories
                   :arguments ((first . 100)
                               (orderBy . ((field . UPDATED_AT)
                                           (direction . DESC))))
                   (edges
                    (node (owner login)
                          name
                          (defaultBranchRef prefix name)
                          url
                          updatedAt
                          isArchived)))))))
#+end_src

Filter the results, generate XML

#+begin_src emacs-lisp :noweb yes :output verbatim
<<nrepos()>>
#+end_src

#+RESULTS:
: 100

#+begin_src emacs-lisp :var gqldata=rocm-repos :results value code
(setq gqltest gqldata)
#+end_src

#+RESULTS:
#+begin_src emacs-lisp
((data
  (organization
   (repositories
    (edges
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "MIOpen")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/MIOpen")
       (updatedAt . "2023-04-26T10:44:34Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocWMMA")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocWMMA")
       (updatedAt . "2023-04-26T04:05:56Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "pytorch-lightning")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/pytorch-lightning")
       (updatedAt . "2023-04-25T16:39:18Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocBLAS")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocBLAS")
       (updatedAt . "2023-04-25T04:41:43Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "AMDMIGraphX")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/AMDMIGraphX")
       (updatedAt . "2023-04-24T13:38:42Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rccl")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rccl")
       (updatedAt . "2023-04-24T09:51:41Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocThrust")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocThrust")
       (updatedAt . "2023-04-23T16:03:47Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocSOLVER")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocSOLVER")
       (updatedAt . "2023-04-23T16:03:47Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "Tensile")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/Tensile")
       (updatedAt . "2023-04-23T11:50:39Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "pytorch")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/pytorch")
       (updatedAt . "2023-04-22T16:49:41Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocMLIR")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocMLIR")
       (updatedAt . "2023-04-22T11:17:48Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "tensorflow-upstream")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop-upstream"))
       (url . "https://github.com/ROCmSoftwarePlatform/tensorflow-upstream")
       (updatedAt . "2023-04-21T14:57:40Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "TransferBench")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/TransferBench")
       (updatedAt . "2023-04-20T17:06:37Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "hipBLASLt")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/hipBLASLt")
       (updatedAt . "2023-04-20T17:04:42Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "composable_kernel")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/composable_kernel")
       (updatedAt . "2023-04-20T05:40:53Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "triton")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "triton-mlir"))
       (url . "https://github.com/ROCmSoftwarePlatform/triton")
       (updatedAt . "2023-04-19T21:14:09Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "gpufort")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/gpufort")
       (updatedAt . "2023-04-19T18:58:32Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "Thrust")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/Thrust")
       (updatedAt . "2023-04-19T08:56:06Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "MIOpenGEMM")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/MIOpenGEMM")
       (updatedAt . "2023-04-19T08:54:41Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "half")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/half")
       (updatedAt . "2023-04-19T08:54:17Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "hipBLAS")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/hipBLAS")
       (updatedAt . "2023-04-16T13:54:48Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "hipCUB")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/hipCUB")
       (updatedAt . "2023-04-16T13:14:38Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "hipFFT")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/hipFFT")
       (updatedAt . "2023-04-13T09:28:39Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "hipfort")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/hipfort")
       (updatedAt . "2023-04-12T04:39:04Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "aws-ofi-rccl")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "cxi"))
       (url . "https://github.com/ROCmSoftwarePlatform/aws-ofi-rccl")
       (updatedAt . "2023-04-11T16:49:13Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocALUTION")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocALUTION")
       (updatedAt . "2023-04-11T15:21:32Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocFFT")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocFFT")
       (updatedAt . "2023-04-11T15:18:39Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "hipSPARSE")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/hipSPARSE")
       (updatedAt . "2023-04-11T07:55:17Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocSPARSE")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocSPARSE")
       (updatedAt . "2023-04-11T07:55:12Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "apex")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/apex")
       (updatedAt . "2023-04-10T09:44:32Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "AITemplate")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "amd-develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/AITemplate")
       (updatedAt . "2023-04-09T02:20:17Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocPRIM")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocPRIM")
       (updatedAt . "2023-04-06T21:17:56Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocHPL")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocHPL")
       (updatedAt . "2023-04-06T12:58:36Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "hipRAND")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/hipRAND")
       (updatedAt . "2023-04-05T05:53:24Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "hipify_torch")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/hipify_torch")
       (updatedAt . "2023-04-02T21:26:46Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "DeepSpeed")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/DeepSpeed")
       (updatedAt . "2023-04-02T19:22:06Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "gloo")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/gloo")
       (updatedAt . "2023-03-28T22:01:07Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "Megatron-LM")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "rocm_microsoft"))
       (url . "https://github.com/ROCmSoftwarePlatform/Megatron-LM")
       (updatedAt . "2023-03-22T14:19:39Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "hipDNN")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/hipDNN")
       (updatedAt . "2023-03-21T08:57:42Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "DeepSpeed-MII")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/DeepSpeed-MII")
       (updatedAt . "2023-03-13T03:56:02Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocmProfileData")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocmProfileData")
       (updatedAt . "2023-03-11T06:25:59Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "hipSOLVER")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/hipSOLVER")
       (updatedAt . "2023-03-10T17:54:31Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocRAND")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocRAND")
       (updatedAt . "2023-03-10T17:54:21Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rccl-tests")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/rccl-tests")
       (updatedAt . "2023-03-07T19:08:01Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "DeepLearningExamples")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/DeepLearningExamples")
       (updatedAt . "2023-03-05T17:20:14Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "faiss")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/faiss")
       (updatedAt . "2023-02-22T21:36:46Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "FAMBench")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/FAMBench")
       (updatedAt . "2023-02-21T21:55:25Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "gputt")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/gputt")
       (updatedAt . "2023-02-21T12:29:07Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "transformers")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/transformers")
       (updatedAt . "2023-02-15T17:18:38Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "nvtop")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/nvtop")
       (updatedAt . "2023-02-10T16:41:51Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "MISA")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/MISA")
       (updatedAt . "2023-02-09T04:39:47Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "tensorflow-addons")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/tensorflow-addons")
       (updatedAt . "2023-02-06T05:17:23Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "tensorflow-serving")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/tensorflow-serving")
       (updatedAt . "2023-01-31T21:07:06Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "FBGEMM")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/FBGEMM")
       (updatedAt . "2023-01-31T19:17:06Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "MITuna")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/MITuna")
       (updatedAt . "2023-01-31T17:08:29Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "Gromacs")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop_2022_amd"))
       (url . "https://github.com/ROCmSoftwarePlatform/Gromacs")
       (updatedAt . "2023-01-31T15:30:39Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "roctracer")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "amd-master"))
       (url . "https://github.com/ROCmSoftwarePlatform/roctracer")
       (updatedAt . "2023-01-28T17:28:05Z")
       (isArchived . t)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "cub-hip")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "hip_port_1.7.4"))
       (url . "https://github.com/ROCmSoftwarePlatform/cub-hip")
       (updatedAt . "2023-01-28T17:09:34Z")
       (isArchived . t)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "Anakin")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "developing"))
       (url . "https://github.com/ROCmSoftwarePlatform/Anakin")
       (updatedAt . "2023-01-28T16:12:17Z")
       (isArchived . t)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "fastbook")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/fastbook")
       (updatedAt . "2023-01-28T06:20:17Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "eigen")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/eigen")
       (updatedAt . "2023-01-28T06:17:36Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "MIOpenTensile")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/MIOpenTensile")
       (updatedAt . "2023-01-28T01:16:52Z")
       (isArchived . t)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "torchrec_private")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "RenfeiChen-FB-patch-1"))
       (url . "https://github.com/ROCmSoftwarePlatform/torchrec_private")
       (updatedAt . "2023-01-28T00:16:18Z")
       (isArchived . t)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "actions")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/actions")
       (updatedAt . "2023-01-27T22:52:46Z")
       (isArchived . t)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "kernl")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/kernl")
       (updatedAt . "2023-01-24T18:22:14Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "omniperf")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/omniperf")
       (updatedAt . "2023-01-20T14:46:09Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "mosaicml_benchmarks_internal")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/mosaicml_benchmarks_internal")
       (updatedAt . "2022-12-20T10:46:31Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocBLAS-Examples")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocBLAS-Examples")
       (updatedAt . "2022-12-14T23:07:15Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "jax")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/jax")
       (updatedAt . "2022-12-14T01:35:32Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "MIFin")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/MIFin")
       (updatedAt . "2022-12-14T00:56:48Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "frugally-deep")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/frugally-deep")
       (updatedAt . "2022-12-08T17:52:53Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "Paddle")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/Paddle")
       (updatedAt . "2022-12-08T09:06:17Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "hipCaffe")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "hip"))
       (url . "https://github.com/ROCmSoftwarePlatform/hipCaffe")
       (updatedAt . "2022-12-05T11:19:30Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "fastai")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/fastai")
       (updatedAt . "2022-11-28T05:24:54Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "mxnet")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "hip_port_v1.4.x"))
       (url . "https://github.com/ROCmSoftwarePlatform/mxnet")
       (updatedAt . "2022-11-16T17:34:25Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "flash-attention")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "flash_attention_for_rocm"))
       (url . "https://github.com/ROCmSoftwarePlatform/flash-attention")
       (updatedAt . "2022-11-16T00:27:21Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "res_embed")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/res_embed")
       (updatedAt . "2022-11-14T10:11:47Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "OpenFOAM_HMM")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "suyash/hmm"))
       (url . "https://github.com/ROCmSoftwarePlatform/OpenFOAM_HMM")
       (updatedAt . "2022-11-04T18:41:41Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "cublasgemm-benchmark")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/cublasgemm-benchmark")
       (updatedAt . "2022-11-04T05:50:56Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocHPCG")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocHPCG")
       (updatedAt . "2022-11-03T12:14:25Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "FunctionalPlus")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/FunctionalPlus")
       (updatedAt . "2022-11-01T22:16:12Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "HIPIFY")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "amd-staging"))
       (url . "https://github.com/ROCmSoftwarePlatform/HIPIFY")
       (updatedAt . "2022-10-26T12:52:16Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "miopen_cudnn_ops")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/miopen_cudnn_ops")
       (updatedAt . "2022-09-28T01:05:48Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocLibUtils")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocLibUtils")
       (updatedAt . "2022-09-22T21:11:19Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "libflame")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/libflame")
       (updatedAt . "2022-09-20T21:28:47Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "libfabric")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/libfabric")
       (updatedAt . "2022-09-16T14:46:04Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "pytorch_scatter")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/pytorch_scatter")
       (updatedAt . "2022-09-09T09:02:39Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "blis")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/blis")
       (updatedAt . "2022-09-08T10:21:08Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "pytorch-micro-benchmarking")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/pytorch-micro-benchmarking")
       (updatedAt . "2022-08-22T06:28:28Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocALmodels-1")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocALmodels-1")
       (updatedAt . "2022-08-10T10:14:34Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocALmodels")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocALmodels")
       (updatedAt . "2022-08-10T10:14:34Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "migraphx_userguide")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/migraphx_userguide")
       (updatedAt . "2022-08-10T09:39:19Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "rocComposer")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/rocComposer")
       (updatedAt . "2022-08-10T01:21:44Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "horovod")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/horovod")
       (updatedAt . "2022-08-03T13:15:26Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "ROCm")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/ROCm")
       (updatedAt . "2022-08-02T15:39:07Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "DeepBench")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/DeepBench")
       (updatedAt . "2022-07-23T23:58:15Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "migraphx-benchmark")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/migraphx-benchmark")
       (updatedAt . "2022-07-23T01:09:20Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "ucc")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "develop"))
       (url . "https://github.com/ROCmSoftwarePlatform/ucc")
       (updatedAt . "2022-07-22T23:03:32Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "nccl-rccl-parser")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "main"))
       (url . "https://github.com/ROCmSoftwarePlatform/nccl-rccl-parser")
       (updatedAt . "2022-07-15T22:18:58Z")
       (isArchived)))
     ((node
       (owner
        (login . "ROCmSoftwarePlatform"))
       (name . "MIOpenExamples")
       (defaultBranchRef
        (prefix . "refs/heads/")
        (name . "master"))
       (url . "https://github.com/ROCmSoftwarePlatform/MIOpenExamples")
       (updatedAt . "2022-06-27T20:10:48Z")
       (isArchived))))))))
#+end_src

Filter the results, generate XML

#+name: rocm-core
#+begin_src emacs-lisp :var gqldata=rocm-repos :results value html
(thread-first
  (thread-last
    (a-get* (nthcdr 0 gqldata) 'data 'organization 'repositories 'edges)
    (mapcar (lambda (el) (a-get* el 'node)))
    (seq-filter (lambda (el) (not (a-get* el 'isArchived))))
    (mapcar (lambda (el)
              (let* (;; (defaultBranchRef (a-get* 'defaultBranchRef))
                     (path (a-get* el 'name))
                     (ref (concat (a-get* el 'defaultBranchRef 'prefix)
                                  (a-get* el 'defaultBranchRef 'name)))
                     (name (string-join (list (a-get* el 'owner 'login)
                                              (a-get* el 'name)) "/")))
                (concat "<project"
                        " name=\"" name
                        "\" path=\"" path
                        "\" revision=\"" ref "\" remote=\"github\"/>")))))
  (cl-sort 'string-lessp :key 'downcase)
  (string-join "\n"))
#+end_src

#+RESULTS: rocm-core
#+begin_export html
<project name="ROCmSoftwarePlatform/AITemplate" path="AITemplate" ref="refs/heads/amd-develop" remote="github" />
<project name="ROCmSoftwarePlatform/AMDMIGraphX" path="AMDMIGraphX" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/apex" path="apex" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/aws-ofi-rccl" path="aws-ofi-rccl" ref="refs/heads/cxi" remote="github" />
<project name="ROCmSoftwarePlatform/blis" path="blis" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/composable_kernel" path="composable_kernel" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/cublasgemm-benchmark" path="cublasgemm-benchmark" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/DeepBench" path="DeepBench" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/DeepLearningExamples" path="DeepLearningExamples" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/DeepSpeed" path="DeepSpeed" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/DeepSpeed-MII" path="DeepSpeed-MII" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/eigen" path="eigen" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/faiss" path="faiss" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/FAMBench" path="FAMBench" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/fastai" path="fastai" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/fastbook" path="fastbook" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/FBGEMM" path="FBGEMM" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/flash-attention" path="flash-attention" ref="refs/heads/flash_attention_for_rocm" remote="github" />
<project name="ROCmSoftwarePlatform/frugally-deep" path="frugally-deep" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/FunctionalPlus" path="FunctionalPlus" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/gloo" path="gloo" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/gpufort" path="gpufort" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/gputt" path="gputt" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/Gromacs" path="Gromacs" ref="refs/heads/develop_2022_amd" remote="github" />
<project name="ROCmSoftwarePlatform/half" path="half" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/hipBLAS" path="hipBLAS" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/hipBLASLt" path="hipBLASLt" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/hipCaffe" path="hipCaffe" ref="refs/heads/hip" remote="github" />
<project name="ROCmSoftwarePlatform/hipCUB" path="hipCUB" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/hipDNN" path="hipDNN" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/hipFFT" path="hipFFT" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/hipfort" path="hipfort" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/HIPIFY" path="HIPIFY" ref="refs/heads/amd-staging" remote="github" />
<project name="ROCmSoftwarePlatform/hipify_torch" path="hipify_torch" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/hipRAND" path="hipRAND" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/hipSOLVER" path="hipSOLVER" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/hipSPARSE" path="hipSPARSE" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/horovod" path="horovod" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/jax" path="jax" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/kernl" path="kernl" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/libfabric" path="libfabric" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/libflame" path="libflame" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/Megatron-LM" path="Megatron-LM" ref="refs/heads/rocm_microsoft" remote="github" />
<project name="ROCmSoftwarePlatform/MIFin" path="MIFin" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/migraphx-benchmark" path="migraphx-benchmark" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/migraphx_userguide" path="migraphx_userguide" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/MIOpen" path="MIOpen" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/miopen_cudnn_ops" path="miopen_cudnn_ops" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/MIOpenExamples" path="MIOpenExamples" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/MIOpenGEMM" path="MIOpenGEMM" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/MISA" path="MISA" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/MITuna" path="MITuna" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/mosaicml_benchmarks_internal" path="mosaicml_benchmarks_internal" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/mxnet" path="mxnet" ref="refs/heads/hip_port_v1.4.x" remote="github" />
<project name="ROCmSoftwarePlatform/nccl-rccl-parser" path="nccl-rccl-parser" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/nvtop" path="nvtop" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/omniperf" path="omniperf" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/OpenFOAM_HMM" path="OpenFOAM_HMM" ref="refs/heads/suyash/hmm" remote="github" />
<project name="ROCmSoftwarePlatform/Paddle" path="Paddle" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/pytorch" path="pytorch" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/pytorch-lightning" path="pytorch-lightning" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/pytorch-micro-benchmarking" path="pytorch-micro-benchmarking" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/pytorch_scatter" path="pytorch_scatter" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/rccl" path="rccl" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rccl-tests" path="rccl-tests" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/res_embed" path="res_embed" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/rocALmodels" path="rocALmodels" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/rocALmodels-1" path="rocALmodels-1" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/rocALUTION" path="rocALUTION" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rocBLAS" path="rocBLAS" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rocBLAS-Examples" path="rocBLAS-Examples" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rocComposer" path="rocComposer" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/rocFFT" path="rocFFT" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rocHPCG" path="rocHPCG" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rocHPL" path="rocHPL" ref="refs/heads/main" remote="github" />
<project name="ROCmSoftwarePlatform/rocLibUtils" path="rocLibUtils" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/ROCm" path="ROCm" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/rocMLIR" path="rocMLIR" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rocmProfileData" path="rocmProfileData" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/rocPRIM" path="rocPRIM" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rocRAND" path="rocRAND" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rocSOLVER" path="rocSOLVER" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rocSPARSE" path="rocSPARSE" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rocThrust" path="rocThrust" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/rocWMMA" path="rocWMMA" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/Tensile" path="Tensile" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/tensorflow-addons" path="tensorflow-addons" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/tensorflow-serving" path="tensorflow-serving" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/tensorflow-upstream" path="tensorflow-upstream" ref="refs/heads/develop-upstream" remote="github" />
<project name="ROCmSoftwarePlatform/Thrust" path="Thrust" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/TransferBench" path="TransferBench" ref="refs/heads/develop" remote="github" />
<project name="ROCmSoftwarePlatform/transformers" path="transformers" ref="refs/heads/master" remote="github" />
<project name="ROCmSoftwarePlatform/triton" path="triton" ref="refs/heads/triton-mlir" remote="github" />
<project name="ROCmSoftwarePlatform/ucc" path="ucc" ref="refs/heads/develop" remote="github" />
#+end_export

Generate =rocm_software_platform.xml=

#+begin_src xml :tangle rocm_software_platform.xml :noweb yes
<?xml version="1.0" encoding="utf-8"?>
<manifest>
  <<rocm-core(rocm-repos)>>
</manifest>
#+end_src

